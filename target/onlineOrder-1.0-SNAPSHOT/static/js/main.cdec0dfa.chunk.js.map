{"version":3,"sources":["utils.js","components/LoginForm.js","components/FoodList.js","components/MyCart.js","components/SignupForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","username","password","loginUrl","fetch","method","headers","credentials","then","response","console","log","status","Error","signup","data","body","JSON","stringify","LoginForm","state","loading","onFinish","setState","message","success","props","onSuccess","catch","err","error","finally","render","name","style","width","margin","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType","React","Component","Option","Select","AddToCartButton","itemId","useState","setLoading","title","icon","PlusOutlined","onClick","addItemToCart","FoodList","curRest","setCurRest","loadingRest","setLoadingRest","restaurants","setRestaurants","foodData","setFoodData","useEffect","json","restId","value","onSelect","onChange","map","item","id","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","extra","src","imageUrl","alt","height","display","alignItems","justifyContent","price","content","description","trigger","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","ShoppingCartOutlined","onClose","visible","footer","strong","totalPrice","toFixed","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","SignupForm","displayModal","handleCancel","signupOnClick","onCancel","destroyOnClose","initialValues","remember","preserve","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","fontFamily","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cdec0dfa.chunk.js","sourcesContent":["//includes all requests to the server\n//login api -> make a request to server\n\nexport const login = (credential) => {\n    const {username, password} = credential;\n    const loginUrl = `/login?username=${username}&password=${password}`;\n\n    return fetch(loginUrl, { //发送请求\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        console.log('login->', response);\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to log in\");\n        }\n    });\n};\n\nexport const signup = (data) => {\n    const signupUrl = \"/signup\";\n\n    return fetch(signupUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to sign up\");\n        }\n    });\n};\n//fetch restaurant api\nexport const getRestaurants = () => {\n    return fetch(\"/restaurants\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get restaurants\");\n        }\n\n        return response.json();\n    });\n};\n\n//fetch menu api\nexport const getMenus = (restId) => {\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get menus\");\n        }\n\n        return response.json();\n    });\n};\n\n//fetch cart\nexport const getCart = () => {\n    return fetch(\"/cart\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get shopping cart data\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const checkout = () => {\n    return fetch(\"/checkout\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to checkout\");\n        }\n    });\n};\n\nexport const addItemToCart = (itemId) => {\n    return fetch(`/order/${itemId}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to add menu item to shopping cart\");\n        }\n    });\n};\n","import {Button, Form, Input, message} from \"antd\";\nimport React from \"react\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {login} from \"../utils\";\n\nclass LoginForm extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    onFinish = (data) => {\n        //step 1: set loading true\n        //step 2: send login request(call login api) to the server\n        //step 3: deal with login status ->logged in or not\n        //step 4: set loading false\n        this.setState({\n            loading: true,\n        });\n        login(data)\n            .then(() => { //通过. then 接受返回值\n                //show logged in\n                message.success(`Login Successful`);\n                this.props.onSuccess();\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                this.setState({\n                    loading: false,\n                });\n            });\n    };\n\n    render = () => {\n        return (\n            <Form\n                name=\"normal_login\"\n                onFinish={this.onFinish}\n                style={{\n                    width: 300,\n                    margin: \"auto\",\n                }}\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[{required: true, message: \"Please input your Username!\"}]}\n                >\n                    <Input prefix={<UserOutlined/>} placeholder=\"Username\"/>\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[{required: true, message: \"Please input your Password!\"}]}\n                >\n                    <Input.Password prefix={<LockOutlined/>} placeholder=\"Password\"/>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\n                        Log in\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    };\n}\n\nexport default LoginForm;","import {Button, Card, List, message, Select, Tooltip, Popover} from \"antd\";\nimport {useEffect, useState} from \"react\";\nimport {addItemToCart, getMenus, getRestaurants} from \"../utils\";\nimport {PlusOutlined} from \"@ant-design/icons\";\n\nconst {Option} = Select;\n\n// props.itemid\nconst AddToCartButton = ({itemId}) => {\n    const [loading, setLoading] = useState(false);\n\n    const AddToCart = () => {\n        //add selected menu to the cart\n        //1. set loading to ture\n        //2. add menu to cart and inform the server\n        setLoading(true);\n        addItemToCart(itemId)\n            .then(() => message.success(`Successfully add item`))\n            .catch((err) => message.error(err.message))\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Tooltip title=\"Add to shopping cart\">\n            <Button\n                loading={loading}\n                type=\"primary\"\n                icon={<PlusOutlined/>}\n                onClick={AddToCart}\n            />\n        </Tooltip>\n    );\n};\n\nconst FoodList = () => {\n    //current selected option\n    const [curRest, setCurRest] = useState();\n    //loading restaurant status\n    const [loadingRest, setLoadingRest] = useState(false);\n    //rest list\n    const [restaurants, setRestaurants] = useState([]);\n    //loading rest menu\n    const [loading, setLoading] = useState(false);\n    //store menu status\n    const [foodData, setFoodData] = useState([]);\n\n\n    //fetch rest list\n    useEffect(() => { //didmount 调用一次\n        //step 1 : set loading restaurant = true\n        //step 2: fetch rest list from the server\n        setLoadingRest(true);\n        getRestaurants()\n            .then((response) => { //.tben 接收结果\n                setRestaurants(response);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoadingRest(false);\n            });\n    }, []);\n\n    //fetch menu of current selected rest\n    useEffect(() => {\n        //step 1: set loading menu status\n        //step 2: fetch menu from the server\n        if (curRest) {\n            setLoading(true);\n            getMenus(curRest)\n                .then((data) => {\n                    setFoodData(data);\n                })\n                .catch((err) => {\n                    message.error(err.message);\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [curRest]);\n\n    return (\n        <>\n            <Select\n                value={curRest}\n                onSelect={(value) => setCurRest(value)}\n                placeholder=\"Select a restaurant\"\n                loading={loadingRest}\n                style={{width: 300}}\n                onChange={() => {\n                }}\n            >\n                {restaurants.map((item) => {// item => <Option value...\n                    return <Option value={item.id} key={item.id}>{item.name}</Option>;\n                })}\n            </Select>\n            {curRest && (\n                <List\n                    style={{marginTop: 20,}}\n                    loading={loading}\n                    grid={{\n                        gutter: 16,\n                        xs: 1,\n                        sm: 1,\n                        md: 3,\n                        lg: 3,\n                        xl: 3,\n                        xxl: 3,\n                    }}\n                    dataSource={foodData}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <Card\n                                title={item.name}\n                                extra={<AddToCartButton itemId={item.id}/>}\n                            >\n                                <img\n                                    src={item.imageUrl}\n                                    alt={item.name}\n                                    style={{height: \"auto\", width: \"100%\", display: \"block\"}}\n                                />\n                                <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\"}}>\n                                    {`Price:$${item.price}`} {/*Price:{item.price}*/}\n                                    <Popover content={item.description} title={item.name} trigger=\"click\">\n                                        More\n                                    </Popover>\n                                </div>\n                            </Card>\n                        </List.Item>\n                    )}\n                />\n            )}\n        </>\n    );\n};\n\nexport default FoodList;","import {Button, Drawer, List, message, Typography} from \"antd\";\nimport {useEffect, useState} from \"react\";\nimport {checkout, getCart} from \"../utils\";\nimport {ShoppingCartOutlined} from \"@ant-design/icons\";\n\nconst {Text} = Typography;\n\nconst MyCart = () => {\n    //display/hide drawer\n    const [cartVisible, setCartVisible] = useState(false);\n    // set loading\n    const [loading, setLoading] = useState(false);\n    // state-> cart data\n    const [cartData, setCartData] = useState();\n    //set checking loading\n    const [checking, setChecking] = useState(false);\n\n    useEffect(() => {\n        // set loading\n        //fetch items added in the cart from the server\n        if (cartVisible) {\n\n\n            setLoading(true);\n            getCart()\n                .then((data) => {\n                    setCartData(data);\n                })\n                .catch((err) => {\n                    message.error(err.message);\n                })\n                .finally(() => {\n                    setLoading(false);\n                })\n        }\n    }, [cartVisible]);\n\n    const onCheckOut = () => {\n        setChecking(true);\n        checkout()\n            .then(() => {\n                message.success(\"Successfully checkout\");\n                setCartVisible(false);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setChecking(false);\n            });\n    };\n\n    const onCloseDrawer = () => {\n        setCartVisible(false);\n    };\n\n    const onOpenDrawer = () => {\n        setCartVisible(true);\n    };\n\n    return (\n        <>\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\n                Cart\n                <ShoppingCartOutlined/>\n            </Button>\n            <Drawer\n                title=\"My Shopping Cart\"\n                onClose={onCloseDrawer}\n                visible={cartVisible}\n                width={520}\n                footer={\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice.toFixed(2)}`}</Text>\n                        <div>\n                            <Button onClick={onCloseDrawer} style={{marginRight: 8}}>\n                                Cancel\n                            </Button>\n                            <Button\n                                onClick={onCheckOut}\n                                type=\"primary\"\n                                loading={checking}\n                                disabled={loading || cartData?.orderItemList.length === 0}\n                            >\n                                Checkout\n                            </Button>\n                        </div>\n                    </div>\n                }\n            >\n                <List\n                    loading={loading}\n                    itemLayout=\"horizontal\"\n                    dataSource={cartData ? cartData.orderItemList : []}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <List.Item.Meta\n                                title={item.menuItem.name}\n                                description={`$${item.price}`}\n                            />\n                        </List.Item>\n                    )}\n                />\n            </Drawer>\n        </>\n    );\n};\n\nexport default MyCart;\n\n","import {Button, Form, Input, message, Modal} from \"antd\";\nimport React from \"react\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {signup} from \"../utils\";\n\nclass SignupForm extends React.Component {\n    state = {\n        displayModal: false,\n    };\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        });\n    };\n\n    signupOnClick = () => {\n        this.setState({\n            displayModal: true,\n        });\n    };\n\n    onFinish = (data) => {\n        signup(data)\n            .then(() => {\n                this.setState({\n                    displayModal: false,\n                });\n                message.success(`Successfully signed up`);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            });\n    };\n\n    render = () => {\n        return (\n            <>\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\n                    Register\n                </Button>\n                <Modal\n                    title=\"Register\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    destroyOnClose={true}\n                >\n                    <Form\n                        name=\"normal_register\"\n                        initialValues={{remember: true}}\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"email\"\n                            rules={[{required: true, message: \"Please input your email!\"}]}\n                        >\n                            <Input prefix={<UserOutlined/>} placeholder=\"Email\"/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                {required: true, message: \"Please input your password!\"},\n                            ]}\n                        >\n                            <Input prefix={<LockOutlined/>} placeholder=\"Password\"/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"firstName\"\n                            rules={[\n                                {required: true, message: \"Please input your first name!\"},\n                            ]}\n                        >\n                            <Input placeholder=\"firstname\"/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"lastName\"\n                            rules={[\n                                {required: true, message: \"Please input your last name!\"},\n                            ]}\n                        >\n                            <Input placeholder=\"lastname\"/>\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Register\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        );\n    };\n}\n\nexport default SignupForm;\n","import './App.css';\nimport {Layout, Typography} from \"antd\";\nimport React, {useState} from \"react\";\nimport LoginForm from \"./components/LoginForm\";\nimport FoodList from \"./components/FoodList\";\nimport MyCart from \"./components/MyCart\";\nimport SignupForm from \"./components/SignupForm\";\n\nconst {Header, Content} = Layout;\nconst {Title} = Typography;\n\n\nfunction App() {\n    const [authed, setAuthed] = useState(false);\n    return (\n        <Layout style={{height: \"100vh\"}}>\n            <Header>\n                <div className=\"header\"\n                     style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\"}}>\n\n                    <Title\n                        level={2}\n                        style={{color: \"white\", lineHeight: \"inherit\", marginBottom: 0, fontFamily: \"cursive\"}}\n                    >\n                        Chew-Chew\n                    </Title>\n                    {/*{authed && (*/}\n                    {/*    <div>*/}\n                    {/*        <MyCart/>*/}\n                    {/*    </div>*/}\n                    {/*)}*/}\n                    <div>{authed ? <MyCart/> : <SignupForm/>}</div>\n\n                </div>\n            </Header>\n            <Content\n                style={{\n                    padding: \"50px\",\n                    maxHeight: \"calc(100% - 64px)\",\n                    overflowY: \"auto\",\n                }}\n            >\n                {authed ? ( //登陆的话就显示\n                    <FoodList/>\n                ) : (\n                    <LoginForm onSuccess={() => setAuthed(true)}/>\n                )}\n            </Content>\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode> 怕报错\n    <App />,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}